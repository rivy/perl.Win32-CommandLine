BUILDs

use 'b' for builds (calls build+nant) to make sure build.pl is up to date.


POSSIBLE x.bat name change

? xcl.bat
? xc.bat


TODO for BUILD

* customize "install" action for this installation to check for perl alias using "x" (doskey for cmd.exe, alias for 4nt/tcc/tcmd) [ a specially modified build.PL based on the current build.PL - ?? an addition to .config vs a diff on the base custom build.PL somehow?? ]

INSTALLATION

ADD NOTE to installation that any perl alias using x.bat must be deleted/unaliased before installation of Win32-CommandLine to allow x.bat to be updated (should be rare).
I don't see any way around this as x.bat will be wrapping any perl call ... would need a hand off to a non-wrapped execution with termination of the current process before the unwrapped execution gets to changing x.bat.

if perl is aliased to 'x perl ...' then installs will fail with:
	"ppm install failed: Can't rename as C:/Perl/site/bin/x.bat.ppmbak: Permission denied"
because x.bat is in use and can't be renamed
ppm is a batch file which uses perl internally ... so an alias to 'x perl ...' will keep x.bat in use while executing the install command

workaround: unalias perl
re-run "build install" or "ppm install Win32-Command..."

* ADD this notation to the suggestion to alias perl to ... 
	- maybe, in the future, perl could be compiled with this module in mind to avoid the need to alias it...

4NT/TCC/TCMD

Note % issue:

for cmd.exe: 	%<any> => %<any> if it doesn't match a variable; %% => %%
for 4NT: 		%<any> => <null> if it doesn't match a variable; %% => %

x.bat is designed not to reinterpret 4NT %'s otherwise %%%% would be required for each % in the final command line
	

EXAMPLES

::cmd.exe
doskey to=x -S cd ~$*
::4nt/tcc/tcmd
alias to=x -S cd ~%%$


::
doskey cd=x -S cd $* ([4nt] alias cd=x -S cd ~%%$ -?? *cd internally to prevent re-aliasing?)

voila, cd with expanding arguments (better term here?)
although it's not as snappy because the perl interpreter loads and executes for every 'cd'. so, I would use:

doskey to=x -S cd $*

although since we're using a seperate command, I like to have an optional initial ~: so I created to.bat (in the eg directory).

normal cd behavior with extra behavior when used as to

set ~p=c:\documents and settings\USERX\My Documents\Projects
set ~finance=c:\documents and settings\USERY\My Documents\finance
set ~w=%windir

[initial tildes optional]

to ~p
to p
to administrator
to finance

