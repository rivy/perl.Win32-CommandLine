module_name => 'Win32::CommandLine'
dist_author => 'Roy Ivy III <rivy[at]cpan[dot]org>'
license 	=> 'artistic_2'

# VALID licenses: perl => 'http://dev.perl.org/licenses/', apache => 'http://apache.org/licenses/LICENSE-2.0', artistic => 'http://opensource.org/licenses/artistic-license.php', artistic_2 => 'http://opensource.org/licenses/artistic-license-2.0.php', lgpl => 'http://opensource.org/licenses/lgpl-license.php', bsd => 'http://opensource.org/licenses/bsd-license.php', gpl => 'http://opensource.org/licenses/gpl-license.php', mit => 'http://opensource.org/licenses/mit-license.php', mozilla => 'http://opensource.org/licenses/mozilla1.1.php', open_source => undef, unrestricted => undef, restrictive => undef, unknown => undef

#
#lib_path => 'lib//' . join( q{/}, split( /::/xms, ( $config{'module_name'} =~ m/(.*)::.*?$/xms ? $1 : q{} ) ) )		# relative path to the modules lib location (using standard Module::Builder rules)
#

requires_href => { perl => '5.6.0', 'Carp::Assert' => 0, 'File::Which' => 0, %{$config{'requires_href'}}, }
recommends_href => { 'Win32' => 0, 'Win32::API' => 0, 'Win32::Security::SID' => 0, 'Win32::TieRegistry' => 0, %{$config{'recommends_href'}}, }
## ExtUtils::Manifest v1.54+ needed for internal whitespace in MANIFEST file names
##build_requires_href => { 'ExtUtils::Manifest' => '1.54', 'Sub::Override' => 0, %{$config{'build_requires_href'}}, }
#build_requires_href => { 'IPC::Run3' => 0, 'Probe::Perl' => 0, %{$config{'build_requires_href'}}, }
build_requires_href => { 'Test::Differences' => 0, %{$config{'build_requires_href'}}, }

# TODO: think about changing this... need Module::Signature and 'gpg' or Crypt::OpenPGP; and... 
#		...do I want default to be signing for people who build this...; probably so b/s they will just build/install not 'build dist'
#sign => 0
sign => 'true'
#recursive_test_files = 'true'

no_index_href => { directory => [ 'eg', 'extras', 'notes' ], %{$config{'no_index_href'}}, }

#create_readme => 'true'					# create README from module pod
#create_makefile_pl => 'passthrough',	# passthrough Makefile.PL (will download/install Module::Build from CPAN if missing)

#PL_files_href       => {}				# Perl scripts to run in the preprocessing phase (usually generate other files from templates (see Module::Build::API docmentation under "PL_files")

#??? remove addition of 'MANIFEST'
#add_to_cleanup_aref => [ 'vc90.pdb', @{$config{'add_to_cleanup_aref'}} ]
add_to_cleanup_aref => [ 'vc90.pdb', @{$config{'add_to_cleanup_aref'}} ]
add_to_realcleanup_aref => [ 'MANIFEST', 'Makefile.PL', 'META.yml', 'SIGNATURE', @{$config{'add_to_realcleanup_aref'}} ]

assert_os_aref => [ 'MSWin32' ]

#c_source => 'c'

#:some examples
#script_files_aref	=> [ map { glob } qw{ scripts/* } ]		# specify all files in the ./scripts directory as executable Perl scripts, installed when the module is installed
#:transition help for old-style MakeMaker distributions
#pm_files_href       => { map { $_ => $config{lib_path} . q{/} . $_ } ( map { glob } qw{ *.pm } ) }	# copy .pm file(s) from the main directory into their logical package location (for an old-style MakeMaker distribution with PM file location in main directory)
#pod_files_href      => { map { $_ => $config{lib_path} . q{/} . $_ } ( map { glob } qw{ *.pod } ) }	# copy POD file(s) from the main directory into their logical package location (for an old-style MakeMaker distribution with PM file location in main directory)
#xs_files_href       => { map { $_ => $config{lib_path} . q{/} . $_ } ( map { glob } qw{ *.xs } ) }	# copy .xs file(s) from the main directory into their logical package location (for an old-style MakeMaker distribution with XS file location in main directory)

custom_code_href => { 'ACTION_test' => q[sub ACTION_test{ my ($self) = @_; $self->depends_on('build'); if ($ENV{TEST_AUTHOR} or $ENV{TEST_ALL}) {$self->depends_on('distmeta')}; return $self->SUPER::ACTION_test;}] }

custom_ENV_href => { '_BUILD_versioned_file_globs' => q{lib/Win32/CommandLine.pm;bin/*}, '_TEST_lib_path' => $config{lib_path} }